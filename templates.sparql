prefix s: <http://schema.org/>
prefix bib: <http://purl.org/ontology/bibo/>
prefix dct: <http://purl.org/dc/terms/>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix wdt: <http://www.wikidata.org/prop/direct/>
prefix st: <http://ns.inria.fr/sparql-template/>
base <https://www.vcharpenay.link/>
template <#index>(?person) {
    "<!DOCTYPE HTML>"
    "<html>"
        "<head>"
            "<meta charset=\"UTF-8\">"
            "<title>"
                st:call-template(<#name>, ?person)
            "</title>"
            "<link rel=\"alternate\" type=\"application/ld+json\" href=\"vcharpenay.jsonld\">"
            "<link rel=\"stylesheet\" href=\"css/basic.css\">"
        "</head>"
        "<body>"
            st:call-template(<#intro>, ?person)
            st:call-template(<#publications>, ?person)
            st:call-template(<#talks>, ?person)
            st:call-template(<#software>, ?person)
            st:call-template(<#working-notes>, ?person)
        "</body>"
    "</html>"
} where {}

template <#name>(?person) {
    format { "%s %s" ?fname ?lname }
} where {
    ?person a s:Person ;
            s:givenName ?fname ;
            s:familyName ?lname .
}

template <#intro>(?person) {
    "<h1>"
        st:call-template(<#name>, ?person)
    "</h1>"
    "<p>"
        st:call-template(<#with-entity-linking>, ?desc)
    "</p>"
    "<p>"
        "See also: " st:call-template(<#id-list>, ?person)
    "</p>"
} where {
    ?person a s:Person ;
            s:description ?desc .
}

template <#with-entity-linking>(?text) {
    format {
        "%s"
        ?text
    }
} where {
    # TODO recursive call to replace name with anchored text
}

template <#id-list>(?person) {
    format { "<img class=\"inline\" src=\"%s\">" ?logo } " "
    st:call-template( <#anchor>, ?fullid, ?id) ; separator = " / "
} where {
    ?p a s:Person ;
       ?pid ?id .
    {
        ?pid wdt:P1630 ?uri ;
            wdt:P2910 ?logo .
    }
    bind (replace(?uri, "\\$1", ?id) as ?fullid)
}

template <#anchor>(?href ?label) {
    format { "<a href=\"%s\">%s</a>" ?href ?label }
} where {}

template <#publications>(?person) {
    "<h2>Publications</h2>"
    "<ul>"
        st:call-template(<#publication>, ?person)
    "</ul>"
} where {
    ?person a s:Person .
}

template <#publication>(?person) {
    "<li>"
        if(?type = "conf", st:call-template(<#conference-paper>, ?title),
        if(?type = "thesis", st:call-template(<#thesis>, ?title), ""))
    "</li>"
} where {
    ?pub a bib:Document ;
         bib:authorList ?l ;
         dct:title ?title ;
         dct:issued ?date .
    {
        ?pub bib:presentedAt ?event .
        bind ("conf" as ?type)
    }
    # TODO union journal paper...
    union
    {
        ?pub a bib:Thesis .
        bind ("thesis" as ?type)
    }
} order by desc(?date)

template <#conference-paper>(?title) {
    st:call-template(<#author-list>, ?title, 0)
    ", "
    format {
        "\"%s,\" In Proc. %s, %s."
        if(?a, st:call-template(<#anchor>, ?url, ?title), ?title)
        ?name
        ?date
    }
} where {
    ?pub a bib:Document ;
         dct:title ?title ;
         bib:presentedAt ?event ;
         dct:issued ?date .
    optional {
        ?pub s:mainEntityOfPage ?url
    }
    ?event s:name ?name
    bind (bound(?url) as ?a)
    # TODO support lists in uRDF.js
    #?l rdf:first ?person .
}

template <#thesis>(?title) {
    st:call-template(<#author-list>, ?title, 0)
    ", "
    format {
        "\"%s,\" PhD thesis, %s, %s."
        st:call-template(<#anchor>, ?url, ?title)
        ?name
        ?date
    }
} where {
    ?pub a bib:Thesis ;
         dct:title ?title ;
         dct:publisher ?uni ;
         dct:issued ?date ;
         s:mainEntityOfPage ?url .
    ?uni s:name ?name .
    filter (lang(?name) = "en")
}

template <#author-list>(?title ?idx) {
    format {
        "%s%s%s. %s"
        if(?first, "", ", ")
        if(?last && !?first, "and ", "")
        substr(?gname, 0, 1) # TODO include compound names
        ?fname
    }
    if(?last, "", st:call-template(<#author-list>, ?title, ?idx + 1))
} where {
    ?pub a bib:Document ;
         bib:authorList ?l ;
         dct:title ?title .
    bind (?idx = 0 as ?first)
    bind (?idx = (<javascript:urdf.length>(?l) - 1) as ?last)
    bind (<javascript:urdf.valueAt>(?l, ?idx) as ?author)
    ?author s:givenName ?gname ;
            s:familyName ?fname .
}

template <#talks>(?person) {
    "<h2>Talks &amp; Tutorials</h2>"
    "<ul>"
        st:call-template(<#talk>, ?person)
    "</ul>"
} where {
    ?person a s:Person .
}

template <#talk>(?person) {
    "<li>"
        st:call-template(<#anchor>, ?url, ?name)
    "</li>"
} where {
    ?person a s:Person ;
            s:author ?talk .
    ?talk a s:Course ;
          s:name ?name ;
          s:mainEntityOfPage ?url .
}

template <#software>(?person) {
    "<h2>Software</h2>"
    "<ul>"
        st:call-template(<#software-item>, ?person)
    "</ul>"
} where {
    ?person a s:Person .
}

template <#software-item>(?person) {
    "<li>"
        st:call-template(<#anchor>, ?repo, ?name)
    "</li>"
} where {
    ?person a s:Person ;
            s:author ?soft .
    ?soft a s:SoftwareSourceCode ;
          s:codeRepository ?repo ;
          s:name ?name .
}

template <#working-notes>(?person) {
    "<h2>Working Notes</h2>"
    "<ul>"
        st:call-template(<#working-note>, ?person)
    "</ul>"
} where {
    ?person a s:Person .
}

template <#working-note>(?person) {
    "<li>"
        st:call-template(<#anchor>, ?note, ?name)
    "</li>"
} where {
    # ?person a s:Person ;
    #         s:author ?post .
    # FIXME vcharpenay/uRDF.js#17
    ?post a s:BlogPosting ;
            s:datePublished ?date ;
            s:sharedContent ?note .
    ?note s:name ?name .
} order by desc(?date) ?name